#ifndef ljit_h
#define ljit_h

#include "lua.h"
#include "lobject.h"

/*
** JitBuilder functions
*/
int luaJ_initJit();
void luaJ_stopJit();

/*
** Type of JITed function body
*/
typedef void (*lua_JitFunction)(lua_State*);

/*
** Given a lua function, tries to compile it. If successful, returns
** a pointer to the compiled function.
**
** The compiled code generated by the Lua Vermelha JIT follows the
** Lua C API. These functions can therefore be called as if they were
** C functions registered with the Lua environment.
**
** A function to be compiled is passed as a pointer to the `Proto`
** of the function. This is the Lua VMs internal representation of
** the function definition/implementation.
*/
lua_JitFunction luaJ_compile(Proto* p);

#endif /* ljit_h */

